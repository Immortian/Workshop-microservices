version: '3.4'

services:
  usersdb:
    container_name: workshop-users-pg-13.3
    image: postgres:13.3
    restart: always
    environment:
      POSTGRES_USER: workshopuser
      POSTGRES_PASSWORD: workshopsv
      POSTGRES_DB: workshopusersdb
    volumes:
      - ./Workshop.Users/Database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  itemsdb:
    container_name: workshop-items-pg-13.3
    image: postgres:13.3
    restart: always
    environment:
      POSTGRES_USER: workshopuser
      POSTGRES_PASSWORD: workshopsv
      POSTGRES_DB: workshopitemsdb
    volumes:
      - ./Workshop.Items/Database:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
  transactionsdb:
    container_name: workshop-transactions-pg-13.3
    image: postgres:13.3
    restart: always
    environment:
      POSTGRES_USER: workshopuser
      POSTGRES_PASSWORD: workshopsv
      POSTGRES_DB: workshoptransactionsdb
    volumes:
      - ./Workshop.Transactions/Database:/docker-entrypoint-initdb.d
    ports:
      - "5434:5432"
  pgadmin:
    container_name: workshop-pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: workshopsv
    ports:
      - "5051:80"
    depends_on:
      - usersdb
      - itemsdb
      - transactionsdb
  rabbitmq:
    container_name: workshop-mq
    image: rabbitmq:3-management
    restart: always
    ports: 
      - "15672:15672"
      - "5672:5672"
  users.microservice:
    container_name: workshop-users-microservice
    image: users.microservice
    build:
      context: .
      dockerfile: /Workshop.Users/Users.Microservice/Dockerfile
    restart: always
    environment:
      ASPNETCORE_URLS: "http://+80"
      ASPNETCORE_ENVIRONMENT: Production
    ports:
      - "8000:80"
    depends_on:
      - usersdb
      - rabbitmq
  items.microservice:
    container_name: workshop-items-microservice
    image: items.microservice
    build:
      context: .
      dockerfile: /Workshop.Items/Items.Microservice/Dockerfile
    restart: always
    environment:
      ASPNETCORE_URLS: "http://+80"
      ASPNETCORE_ENVIRONMENT: Production
    ports:
      - "8001:80"
    depends_on:
      - itemsdb
      - rabbitmq
  confirmtransactions.microservice:
    container_name: workshop-confirmtransactions-microservice
    image: confirmtransactions.microservice
    build:
      context: .
      dockerfile: Workshop.ConfirmTransactions/ConfirmTransactions.Microservice/Dockerfile
    restart: always
    environment:
      ASPNETCORE_URLS: "http://+80"
      ASPNETCORE_ENVIRONMENT: Production
    ports:
      - "8002:80"
    depends_on:
      - rabbitmq
